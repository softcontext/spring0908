<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:component-scan base-package="com.example.demo.aopns2"/>
	
	<!-- 애노테이션을 사용하여 관계를 설정한다. -->
	<context:annotation-config/>
	
	<!-- AOP 설정을 애노테이션으로 설정한다. -->
	<!-- @EnableAspectJAutoProxy -->
	<!-- proxy-target-class="true" : 항상 CGI 방식의 프록시 기술을 사용해라! -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	
	<aop:config>
		<aop:pointcut expression="execution(* divide(int,..))" id="xxx"/>
	
		<aop:advisor advice-ref="myAdvice" pointcut-ref="xxx" order="3"/>
		
		<!-- <aop:aspect ref="myAspect">
			<aop:before method="myBefore" pointcut-ref="xxx"/>
			<aop:around method="myAround" pointcut-ref="xxx"/>
			<aop:after-returning method="myAfterReturning" pointcut-ref="xxx"/>
			<aop:after-throwing method="myAfterThrowing" pointcut-ref="xxx"/>
			<aop:after method="myAfter" pointcut-ref="xxx"/>
		</aop:aspect> -->
	</aop:config>

	
</beans>






